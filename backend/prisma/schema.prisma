// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                      Int                     @id @default(autoincrement())
  email                   String                  @unique
  displayName             String                  @unique
  passwordHash            String
  createdOn               DateTime
  chatCommunications      ChatCommunication[]
  voiceCommunications     VoiceCommunication[]
}

model Customer {
  id                      Int                     @id @default(autoincrement())
  name                    String
  surname                 String
  email                   String
  phoneNumber             String
  products                Product[]
  chatCommunications      ChatCommunication[]
  voiceCommunications     VoiceCommunication[]
}

enum Type {
  PRODUCT
  SERVICE
}

model Product {
  id                      Int                     @id @default(autoincrement())
  name                    String
  description             String
  price                   Int
  type                    Type      
  categories              Category[]
  offerToProducts         OfferToProduct[]
  customers               Customer[]
}

model Category {
  id                      Int                     @id @default(autoincrement())
  name                    String
  products                Product[]
}


model Offer {
  id                      Int                     @id @default(autoincrement())
  name                    String
  description             String
  offerToProducts         OfferToProduct[]
}


model OfferToProduct {
  id                      Int                     @id @default(autoincrement())
  offer                   Offer                   @relation(fields: [offerId], references: [id])
  offerId                 Int
  product                 Product                 @relation(fields: [productId], references: [id])
  productId               Int
  productQuantity         Int
  newPrice                Int

  @@unique([offerId, productId])
}


model ChatCommunication {
  id                      Int                     @id @default(autoincrement())
  message                 String
  timestamp               DateTime
  isUserSent              Boolean
  user                    User                    @relation(fields: [userId], references: [id])
  userId                  Int
  customer                Customer                @relation(fields: [customerId], references: [id])
  customerId              Int
}


model VoiceCommunication {
  id                      Int                     @id @default(autoincrement())
  filePath                String
  start                   DateTime
  end                     DateTime
  isUserStarted           Boolean
  user                    User                    @relation(fields: [userId], references: [id])
  userId                  Int
  customer                Customer                @relation(fields: [customerId], references: [id])
  customerId              Int
}


